<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   applicationComplete="application2_applicationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
		import flash.utils.describeType;

		import mx.events.FlexEvent;

		import org.as3commons.aop.MessageDecorator;
		import org.as3commons.aop.advice.IAdvice;
		import org.as3commons.aop.advisor.impl.PointcutAdvisor;
		import org.as3commons.aop.factory.AOPProxyFactory;
		import org.as3commons.aop.pointcut.IMethodPointcut;
		import org.as3commons.aop.pointcut.impl.MethodNameMatchPointcut;
		import org.as3commons.async.operation.IOperation;
		import org.as3commons.async.operation.event.OperationEvent;
		import org.as3commons.bytecode.interception.impl.BasicMethodInvocationInterceptor;
		import org.as3commons.bytecode.proxy.IProxyFactory;
		import org.as3commons.bytecode.proxy.event.ProxyFactoryEvent;
		import org.as3commons.bytecode.proxy.impl.ProxyFactory;

		protected function application2_applicationCompleteHandler(event:FlexEvent):void {
			var factory:AOPProxyFactory = new AOPProxyFactory();
			var pointcut:IMethodPointcut = new MethodNameMatchPointcut(["writeMessage", "writeYetAnotherMessage", "writeMessageThrowError"]);
			var methodAdvice:IAdvice = new TraceMethodAroundAdvice();
			factory.addAdvisor(new PointcutAdvisor(pointcut, methodAdvice));
			factory.target = MessageWriter; // or new MessageWriter()

			var handler:Function = function(event:OperationEvent):void {
				var writer:MessageWriter = factory.getProxy(["Default message"]);
				writer.writeMessage();

				//writer.message = "Another message";
				writer.writeMessage();
				writer.writeAnotherMessage();

				try {
					writer.writeMessageThrowError();
				} catch (e:Error) {
					trace("Caught error: " + e);
				}

				writer.writeYetAnotherMessage();

				try {
					// new proxy instance without constructor args -> should throw assert error
					var writerB:MessageWriter = factory.getProxy([null]);
					writerB.writeMessage();
				} catch (e:Error) {
					trace("Caught error: " + e);
				}
			};

			var operation:IOperation = factory.createProxy();
			operation.addCompleteListener(handler);
		}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	
</s:Application>
